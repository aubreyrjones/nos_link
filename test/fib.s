;test code generated by clanging the
;code sample up on the llvm-dcpu16 github.

	; .file	"fib.c"
	.text
	.globl	fib
	; .align	2
:fib
	SUB	I, 0xc ; The Notch order
	SET	[0x5+I], A ; The Notch order
	SET	[0x4+I], 0x1 ; The Notch order
	SET	[0x3+I], 0x1 ; The Notch order
	SET	[0x2+I], 0x0 ; The Notch order
	SET	[I], A ; The Notch order
:.LBB0_1
	SET	A, [0x2+I] ; The Notch order
	SET	B, [0x5+I] ; The Notch order
	IFE	A, B ; The Notch order
	SET	PC, .LBB0_4 ; The Notch order
	IFG	A, B ; The Notch order
	SET	PC, .LBB0_4 ; The Notch order
	SET	PC, .LBB0_2 ; The Notch order
:.LBB0_2
	SET	A, [0x4+I] ; The Notch order
	SET	B, [0x3+I] ; The Notch order
	ADD	A, B ; The Notch order
	SET	[0x1+I], A ; The Notch order
	SET	A, [0x4+I] ; The Notch order
	SET	[0x3+I], A ; The Notch order
	SET	A, [0x1+I] ; The Notch order
	SET	[0x4+I], A ; The Notch order
	SET	A, [0x2+I] ; The Notch order
	ADD	A, 0x1 ; The Notch order
	SET	[0x2+I], A ; The Notch order
	SET	PC, .LBB0_1 ; The Notch order
:.LBB0_4
	SET	A, [0x4+I] ; The Notch order
	ADD	I, 0xc ; The Notch order
	SET PC, POP ; The Notch order

	.globl	main
	; .align	2
:main
	SET	PUSH, J
	SET	J, I ; The Notch order
	SET	[J], 0x0 ; The Notch order
	SET	A, 0x5 ; The Notch order
	JSR	fib ; The Notch order
	SET	J, POP
	SET PC, POP ; The Notch order


